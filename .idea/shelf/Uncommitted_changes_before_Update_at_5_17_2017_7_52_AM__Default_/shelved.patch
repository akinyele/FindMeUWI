Index: app/src/main/java/com/android/comp3901/findmeuwi/services/MapPolylines.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/MapPolylines.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/MapPolylines.java	(revision )
@@ -1,9 +1,15 @@
 package com.android.comp3901.findmeuwi.services;
 
+import com.android.comp3901.findmeuwi.R;
+import com.android.comp3901.findmeuwi.activities.FindMe;
+import com.android.comp3901.findmeuwi.locations.Vertex;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.model.Polyline;
+import com.google.android.gms.maps.model.PolylineOptions;
 
+import java.util.HashMap;
 import java.util.LinkedList;
+import java.util.List;
 
 /**
  * Created by Kyzer on 5/12/2017.
@@ -16,16 +22,94 @@
     LinkedList<Polyline> floorEdges;
     LinkedList<Polyline> secondFloorEdges;
     LinkedList<Polyline> thirdFloorEdges;
+    LinkedList<Polyline> descendingEdges;
 
+
+
+
     GoogleMap googleMap;
 
 
-    public MapPolylines(GoogleMap map){
+    public MapPolylines(GoogleMap map) {
 
         this.googleMap = map;
+        this.floorEdges = new LinkedList<>();
+        this.secondFloorEdges = new LinkedList<>();
+        this.thirdFloorEdges = new LinkedList<>();
+        this.descendingEdges = new LinkedList<>();
 
+    }
 
+
+    public void createGraph(){
+
+        List<Edge> edges = FindMe.path.getEdges();
+        List<Vertex> vertices = FindMe.path.getNodes();
+
+        HashMap<String, Vertex> vertexHashMap = FindMe.path.getVertices();
+        Polyline lane;
+        Vertex v1,v2;
+
+
+        for(Edge edge: edges){
+
+
+            v1 = vertexHashMap.get(edge.getSource().getId());
+            v2 = vertexHashMap.get(edge.getDestination().getId());
+
+
+
+            //TODO make polyline clickable
+            PolylineOptions options = new PolylineOptions()
+                    .color(0x33606060)
+                    .width(15)
+                    .zIndex(01)
+                    .clickable(true)
+                    .add(v1.getLL(),v2.getLL());
+
+            lane =  googleMap.addPolyline(options);
+            lane.setClickable(true);
+
+
+            switch (edge.getLevel()){
+
+                case 0:
+                    lane.setColor(R.color.groundFloorColor);
+                    descendingEdges.add(lane);
+                    break;
+                case 1:
+                    lane.setColor(R.color.groundFloorColor);
+                    floorEdges.add(lane);
+                    break;
+                case 2:
+                    lane.setColor(R.color.secondFloorColor);
+                    secondFloorEdges.add(lane);
+                    break;
+                case 3:
+                    lane.setColor(R.color.colorAccent);
+                    thirdFloorEdges.add(lane);
+                    break;
-    }
+            }
+        }
+    }
+
+    public void createPath(){
+
+    }
+
+    public void showAllLevels(){
+
+    }
+
+
+    public void showLevelTwo(){
+
+    }
+
+
+
+
+
 
 
 }
Index: app/src/main/java/com/android/comp3901/findmeuwi/utils/Path.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/utils/Path.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/utils/Path.java	(revision )
@@ -6,6 +6,7 @@
 
 import com.android.comp3901.findmeuwi.activities.FindMe;
 import com.android.comp3901.findmeuwi.locations.Building;
+import com.android.comp3901.findmeuwi.locations.Place;
 import com.android.comp3901.findmeuwi.locations.Room;
 import com.android.comp3901.findmeuwi.locations.Vertex;
 import com.android.comp3901.findmeuwi.services.DB_Helper;
@@ -89,12 +90,12 @@
             Edge lane1 = new Edge(edgesDB.getString(0) + " -> " + edgesDB.getString(1),
                     vertices.get(edgesDB.getString(0)),
                     vertices.get(edgesDB.getString(1)),
-                    (int) edgesDB.getDouble(2));
+                    (int) edgesDB.getDouble(2), edgesDB.getInt(edgesDB.getColumnIndex(DB_Helper.E_LEVEL)));
 
             Edge lane2 = new Edge(edgesDB.getString(1) + " -> " + edgesDB.getString(0),
                     vertices.get(edgesDB.getString(1)),
                     vertices.get(edgesDB.getString(0)),
-                    (int) edgesDB.getDouble(2));
+                    (int) edgesDB.getDouble(2), edgesDB.getInt(edgesDB.getColumnIndex(DB_Helper.E_LEVEL)));
 
 
             connectedNodes.add(vertices.get(edgesDB.getString(0)));
@@ -223,7 +224,16 @@
                         res.getInt(res.getColumnIndex(DB_Helper.B_KNOWN)),
                         res.getDouble(res.getColumnIndex(DB_Helper.B_FAM)),
                         res.getInt(res.getColumnIndex(DB_Helper.B_LANDMARK)));
+                        break;
+            case "place":
+                Location = new Place(verticesDB.getString(0),  //Vid
+                        verticesDB.getString(verticesDB.getColumnIndex(DB_Helper.V_NAME)),//Vname
+                        verticesDB.getDouble(verticesDB.getColumnIndex(DB_Helper.V_LAT)), //latitude
+                        verticesDB.getDouble(verticesDB.getColumnIndex(DB_Helper.V_LONG)),//longtude
+                        verticesDB.getString(verticesDB.getColumnIndex(DB_Helper.V_TYPE)),//type
+                        1,0.0,
+                        verticesDB.getInt(verticesDB.getColumnIndex(DB_Helper.V_LANDMARK)));//Landmark
-                        break;
+                break;
             default:
                 Location = new Vertex(verticesDB.getString(0),  //Vid
                         verticesDB.getString(verticesDB.getColumnIndex(DB_Helper.V_NAME)),//Vname
Index: app/src/main/res/layout/activity_find_me.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_find_me.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/layout/activity_find_me.xml	(revision )
@@ -45,21 +45,22 @@
             android:imeOptions="actionDone"
             android:inputType="textAutoComplete|textAutoCorrect"
             android:textColor="#000000"
-            android:textStyle="bold" />
+            android:textStyle="bold"
+            android:layout_weight="0.58" />
 
         <ToggleButton
-            android:text="ToggleButton"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
             android:id="@+id/locationToggle"
             style="@android:style/Widget.Holo.Button.Toggle"
-            android:textOff="@string/location_off"
-            android:textOn="@string/location_on"
-            android:onClick="toggleLocations"
-            android:checked="false"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
             android:layout_alignParentBottom="true"
             android:layout_alignParentEnd="true"
-            android:layout_weight="1" />
+            android:layout_weight="1"
+            android:checked="false"
+            android:onClick="toggleLocations"
+            android:text="ToggleButton"
+            android:textOff="@string/location_off"
+            android:textOn="@string/location_on" />
     </LinearLayout>
 
     <LinearLayout
Index: app/src/main/res/menu/activity_navi_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/activity_navi_drawer.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/menu/activity_navi_drawer.xml	(revision )
@@ -1,11 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
+<menu xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android">
 
     <group android:checkableBehavior="single">
         <item
             android:id="@+id/nav_camera"
             android:icon="@drawable/ic_menu_camera"
-            android:title="Import" />
+            android:title="Add Landmark" />
         <item
             android:id="@+id/nav_gallery"
             android:icon="@drawable/ic_menu_gallery"
Index: app/src/main/java/com/android/comp3901/findmeuwi/activities/add_landmarks.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/activities/add_landmarks.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/activities/add_landmarks.java	(revision )
@@ -1,20 +1,145 @@
 package com.android.comp3901.findmeuwi.activities;
 
 import android.app.Activity;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.location.Location;
 import android.os.Bundle;
+import com.android.comp3901.findmeuwi.R;
+import com.google.android.gms.vision.face.Landmark;
+
+import android.os.Environment;
+import android.provider.MediaStore;
 import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
 
+import java.io.File;
+import java.io.IOException;
+
 /**
  * Created by Kyzer on 5/14/2017.
  */
 
 public class add_landmarks extends Activity {
+    static final int REQUEST_IMAGE_CAPTURE = 1;
+    static final String TAG = "com.android.comp3901.";
 
+    private String mCurrentPhotoPath;
+
+    /** Views **/
+    private Button saveLandmarkBtn;
+    private EditText landmarkName;
+    private EditText landmarkDesc;
+    private FloatingActionButton fab;
+    private ImageView landmarkImage;
+    private ImageButton getLocation;
+    private TextView location_text;
+
+
+
+    private boolean hasLocation = false;
+
+
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-//        setContentView();
+        setContentView(R.layout.add_landmark_activity);
 
+        /**Inittialising views*/
+        landmarkImage = (ImageView)findViewById(R.id.landmark_preview);
+        saveLandmarkBtn = (Button)findViewById(R.id.save_landmark);
+        landmarkName = (EditText)findViewById(R.id.landmark_name);
+        landmarkDesc = (EditText)findViewById(R.id.landmark_desc);
+        getLocation = (ImageButton)findViewById(R.id.get_landmark_location);
+        location_text = (TextView)findViewById(R.id.landmark_location_textView) ;
 
+        /** Set On Click Listeners*/
+
+        getLocation.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            Location landmark_location = FindMe.getLocation(getApplication() );
+            //Log.d(TAG, "onClick: GetMy Location "+ FindMe.my_location);
+            if(landmark_location == null){
+                Toast.makeText(add_landmarks.this,"Unable to Obtain Location, Ensure GPS is turned on", Toast.LENGTH_SHORT).show();
+                    return;
+            }
+            location_text.setText("Latitude "+landmark_location.getLatitude() + " Longitude: " +landmark_location.getLatitude());
+            hasLocation = true;
+
+            }
+        });
+
+        saveLandmarkBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String name = landmarkName.getText().toString().trim();
+                String desc = landmarkDesc.getText().toString().trim();
+
+                if(!name.equals("") && !desc.equals("") && hasLocation && landmarkImage.getDrawable()!=null ){
+                    Log.d(TAG, "onClick: "+ landmarkName.getTextSize() + " " + landmarkDesc.getTextSize() );
+                    setToast("Saved");
+                    finish();
+                }else{
+                    setToast("Please Fill Out info");
+                }
+           }
+        });
+
+        fab = (FloatingActionButton) findViewById(R.id.add_landmark_imageBtn);
+        fab.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent intent=new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+                intent.putExtra(MediaStore.EXTRA_OUTPUT,
+                        MediaStore.Images.Media.EXTERNAL_CONTENT_URI.getPath());
+                startActivityForResult(intent, REQUEST_IMAGE_CAPTURE);
+            }
+        });
+    }
+
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {
+            Bundle extras = data.getExtras();
+            Bitmap imageBitmap = (Bitmap) extras.get("data");
+            landmarkImage.setImageBitmap(imageBitmap);
+
+        }
+    }
+
+    private File createImageFile() throws IOException {
+        // Create an image file name
+
+
+        String image_name = "";
+
+        String imageFileName = "Landmark_" + image_name + "_";
+        File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);
+        File image = File.createTempFile(
+                imageFileName,  /* prefix */
+                ".jpg",         /* suffix */
+                storageDir      /* directory */
+        );
+
+        // Save a file: path for use with ACTION_VIEW intents
+        mCurrentPhotoPath = image.getAbsolutePath();
+        return image;
+    }
+
+
+
+    private void setToast(String msg){
+        Toast.makeText(this, msg,Toast.LENGTH_SHORT).show();
     }
 }
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -1,48 +1,46 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout
+<android.support.design.widget.CoordinatorLayout xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/activity_main"
     android:layout_height="match_parent"
     android:layout_width="match_parent"
     xmlns:android="http://schemas.android.com/apk/res/android">
 
 
-
-
-<RelativeLayout
+    <RelativeLayout
-    android:layout_height="match_parent"
-    android:layout_width="match_parent">
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
 
 
-    <android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:app="http://schemas.android.com/apk/res-auto"
-        xmlns:tools="http://schemas.android.com/tools"
-        android:id="@+id/drawer_layout"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
+        <android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+            xmlns:app="http://schemas.android.com/apk/res-auto"
+            xmlns:tools="http://schemas.android.com/tools"
+            android:id="@+id/drawer_layout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_alignParentBottom="true"
-        android:fitsSystemWindows="true"
+            android:fitsSystemWindows="true"
-        tools:openDrawer="start"
-        android:layout_alignParentBottom="true">
+            tools:openDrawer="start">
 
 
-        <include
-            layout="@layout/app_bar_main"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" />
+            <include
+                layout="@layout/app_bar_main"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent" />
 
-        <android.support.design.widget.NavigationView
-            android:id="@+id/nav_view"
-            android:layout_width="wrap_content"
-            android:layout_height="match_parent"
-            android:layout_gravity="start"
-            android:fitsSystemWindows="true"
-            app:headerLayout="@layout/nav_header_main"
-            app:menu="@menu/activity_main_drawer" />
+            <android.support.design.widget.NavigationView
+                android:id="@+id/nav_view"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:layout_gravity="start"
+                android:fitsSystemWindows="true"
+                app:headerLayout="@layout/nav_header_main"
+                app:menu="@menu/activity_main_drawer" />
 
 
-    </android.support.v4.widget.DrawerLayout>
+        </android.support.v4.widget.DrawerLayout>
 
 
-</RelativeLayout>
+    </RelativeLayout>
 
 
 </android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/layout/add_landmark_aactivity.xml
===================================================================
--- app/src/main/res/layout/add_landmark_aactivity.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/layout/add_landmark_activity.xml	(revision )
@@ -4,9 +4,12 @@
     android:orientation="vertical" android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:padding="5dp"
+    android:id="@+id/adding_landmarks_layout"
     android:layout_gravity="center"
     android:weightSum="1">
 
+
+
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent"
@@ -18,7 +21,7 @@
             android:layout_height="wrap_content"
             android:paddingBottom="5dp"
             android:paddingTop="5dp"
-            android:text="TextView"
+            android:text="Add Landmark"
             android:textAlignment="center"
             android:textAllCaps="true"
             android:textSize="18sp" />
@@ -32,11 +35,11 @@
             android:paddingBottom="5dp">
 
             <TextView
-                android:id="@+id/landmark_name_lable"
-                android:layout_width="70dp"
+                android:id="@+id/landmark_name_label"
+                android:layout_width="87dp"
                 android:layout_height="match_parent"
                 android:paddingTop="15dp"
-                android:text="TextView" />
+                android:text="Name" />
 
             <EditText
                 android:id="@+id/landmark_name"
@@ -44,7 +47,7 @@
                 android:layout_height="wrap_content"
                 android:ems="10"
                 android:inputType="textPersonName"
-                android:text="Name" />
+                android:text=" " />
 
         </LinearLayout>
 
@@ -57,42 +60,44 @@
 
             <TextView
                 android:id="@+id/textView5"
-                android:layout_width="73dp"
+                android:layout_width="86dp"
                 android:layout_height="match_parent"
                 android:paddingTop="15dp"
-                android:text="TextView" />
+                android:text="Descripition" />
 
             <EditText
-                android:id="@+id/editText2"
+                android:id="@+id/landmark_desc"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:ems="10"
                 android:inputType="textPersonName"
-                android:text="Name" />
+                android:text=" " />
 
         </LinearLayout>
 
         <LinearLayout
-            android:layout_width="match_parent"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
             android:gravity="center"
             android:orientation="horizontal"
-            android:paddingBottom="5dp">
+            android:layout_marginTop="10dp">
 
-            <ImageView
-                android:id="@+id/imageView3"
-                android:layout_width="44dp"
-                android:layout_height="35dp"
+            <ImageButton
+                android:id="@+id/get_landmark_location"
+                android:layout_width="45dp"
+                android:layout_height="wrap_content"
                 android:layout_gravity="center"
-                app:srcCompat="@drawable/ic_gps_fixed_black_24dp" />
+                android:src="@drawable/ic_gps_fixed_black_24dp"
+                app:backgroundTint="?attr/actionModeSplitBackground" />
 
             <TextView
-                android:id="@+id/textView6"
-                android:layout_width="134dp"
-                android:layout_height="36dp"
-                android:paddingTop="10dp"
-                android:text="TextView" />
+                android:id="@+id/landmark_location_textView"
+                android:layout_width="168dp"
+                android:layout_height="match_parent"
+                android:gravity="center"
+                android:paddingTop="2dp"
+                android:text="Get Location" />
         </LinearLayout>
 
         <LinearLayout
@@ -109,45 +114,45 @@
                 android:id="@+id/landmark_preview"
                 android:layout_width="197dp"
                 android:layout_height="234dp"
+                android:layout_marginTop="40dp"
                 android:background="@drawable/cast_skip_ad_label_border" />
 
 
-
-
         </LinearLayout>
 
         <TextView
-            android:id="@+id/textView7"
+            android:id="@+id/landmark_add_error_msg"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:text="TextView" />
+            android:gravity="center"
+            android:text="TextView"
+            android:visibility="gone" />
 
         <Button
-            android:id="@+id/button2"
+            android:id="@+id/save_landmark"
+            style="@style/Widget.AppCompat.Button.Colored"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_gravity="bottom"
             android:text="Save"
-            style="@style/Widget.AppCompat.Button.Colored"
             app:backgroundTint="?attr/actionModeSplitBackground"
             app:layout_anchorGravity="bottom" />
 
     </LinearLayout>
 
-
     <android.support.design.widget.FloatingActionButton
-        android:id="@+id/floatingActionButton"
+        android:id="@+id/add_landmark_imageBtn"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_weight="0.53"
         android:clickable="true"
-        app:fabSize="mini"
+        android:elevation="6dp"
         app:backgroundTint="?attr/actionModeSplitBackground"
+        app:fabSize="mini"
         app:layout_anchor="@id/landmark_preview"
         app:layout_anchorGravity="bottom|center"
-        android:elevation="6dp"
+        app:rippleColor="#b6b6b6"
         app:srcCompat="@android:drawable/ic_menu_camera" />
-
 
 
 </android.support.design.widget.CoordinatorLayout>
Index: app/src/main/java/com/android/comp3901/findmeuwi/activities/FindMe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/activities/FindMe.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/activities/FindMe.java	(revision )
@@ -1,5 +1,6 @@
 package com.android.comp3901.findmeuwi.activities;
 
+import android.Manifest;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -47,6 +48,7 @@
 import com.android.comp3901.findmeuwi.locations.Vertex;
 import com.android.comp3901.findmeuwi.R;
 import com.android.comp3901.findmeuwi.services.Edge;
+import com.android.comp3901.findmeuwi.services.MapPolylines;
 import com.android.comp3901.findmeuwi.utils.Path;
 import com.android.comp3901.findmeuwi.services.Tracker;
 import com.android.comp3901.findmeuwi.services.DB_Helper;
@@ -58,6 +60,7 @@
 import com.google.android.gms.location.LocationListener;
 import com.google.android.gms.location.LocationRequest;
 import com.google.android.gms.location.LocationServices;
+import com.google.android.gms.location.LocationSettingsRequest;
 import com.google.android.gms.location.places.Places;
 import com.google.android.gms.maps.CameraUpdate;
 import com.google.android.gms.maps.CameraUpdateFactory;
@@ -84,20 +87,19 @@
 import java.util.List;
 
 public class FindMe extends Fragment implements OnMapReadyCallback, GoogleApiClient.ConnectionCallbacks,
-        GoogleApiClient.OnConnectionFailedListener, LocationListener, View.OnClickListener,GoogleMap.OnMarkerClickListener,  GoogleMap.OnPolylineClickListener{
+        GoogleApiClient.OnConnectionFailedListener, LocationListener, View.OnClickListener, GoogleMap.OnMarkerClickListener {
 
 
-
-
     //Map Clients
-    private GoogleApiClient mGoogleApiClient;
+    private static GoogleApiClient mGoogleApiClient;
     private UiSettings mUiSettings;
     private DB_Helper dbHelper;
     private Tracker mapTracker;
     private static MapMarker mapMarkers;
+    private static MapPolylines mapPolylines;
     BottomSheetBehavior sheetBehavior;
 
-   //Utils
+    //Utils
 
     //Map Objects
     Marker startMarker, destMarker, marker; //TODO let MapMarker class handle the creation of these markers
@@ -114,8 +116,12 @@
     private AutoCompleteTextView classSearchView;
     private NestedScrollView nestedView;
 
+
+    boolean isSourceSet;
+
     private ToggleButton locatoin_toggle;
 
+    private final float min_accurracy_error = 15;
 
 
     /**Map State Variable**/
@@ -136,11 +142,12 @@
     static Activity instance;
     private CameraUpdate update;
 
+    public static Activity get() {
+        return instance;
+    }
 
-    public static Activity  get(){ return instance;}
 
-
-    public static final Handler trackerHandler = new Handler(){
+    public static final Handler trackerHandler = new Handler() {
         @Override
         public void handleMessage(Message msg) {
 
@@ -149,21 +156,33 @@
             path.remove();
             line.remove();
             mapMarkers.removePOI();
+            //TODO delete starter and destination marker and make is sourceset = flase
+
         }
 
     };
 
 
-
-
     /*
     ** Initializes Map Fragment;
     **/
     private void initMap() {
         MapFragment mapFragment = (MapFragment) getChildFragmentManager().findFragmentById(R.id.mapFragment);
         mapFragment.getMapAsync(this);
+        buildAPI();
     }
 
+    private void buildAPI() {
+        mGoogleApiClient = new GoogleApiClient.Builder(this.getActivity())
+                .addApi(LocationServices.API)
+                .addConnectionCallbacks(this)
+                .addOnConnectionFailedListener(this)
+                .addApi(Places.GEO_DATA_API)
+                .addApi(Places.PLACE_DETECTION_API)
+                .enableAutoManage((FragmentActivity) this.getActivity(), this)
+                .build();
+    }
+
     /*
      * Function that tells the map what to do when its ready
      *
@@ -180,14 +199,40 @@
 
         mGoogleMap = googleMap;
         mUiSettings = mGoogleMap.getUiSettings();
+
+        mapPolylines = new MapPolylines(mGoogleMap);
         mapMarkers = MapMarker.getInstance();
         mapTracker = new Tracker(getActivity());
         mapTracker.start();
         mGoogleMap.setOnMarkerClickListener(this);
+        mGoogleMap.setInfoWindowAdapter(new GoogleMap.InfoWindowAdapter() {
+            @Override
+            public View getInfoWindow(Marker marker) {
+                return null;
+            }
+
+            @Override
+            public View getInfoContents(Marker marker) {
+                View v = getActivity().getLayoutInflater().inflate(R.layout.info_window_layout,null);
+
+                TextView infoTitle = (TextView) v.findViewById(R.id.info_window_title);
+                ImageView infoImage = (ImageView) v.findViewById(R.id.info_window_image_view);
+
+
+                infoTitle.setText(((Place)marker.getTag()).getName());
+
+                return v;
+            }
+        });
         //mGoogleMap.setLatLngBoundsForCameraTarget();
 
 
+        mUiSettings.setMapToolbarEnabled(false);
+        mUiSettings.setZoomControlsEnabled(false);
+        mUiSettings.setMyLocationButtonEnabled(false);
+        mGoogleApiClient.connect();
 
+
         //Map Listeners
         mGoogleMap.setOnCameraIdleListener(new GoogleMap.OnCameraIdleListener() {
             @Override
@@ -201,20 +246,10 @@
         mGoogleMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
             @Override
             public void onMapClick(LatLng latLng) {
-                 Log.d(TAG, "onMapClick: ");
+                Log.d(TAG, "onMapClick: ");
 
-
-
-                for (Polyline polyline : graphLines) {
-                    if (PolyUtil.isLocationOnPath(latLng, polyline.getPoints(), true, 100)) {
-                        // user clicked on polyline
-                        Toast.makeText(getActivity()," Hello "+ polyline.getId(),Toast.LENGTH_SHORT);
-                    }
+            }
-                }
-
-            }
         });
-
         mGoogleMap.setOnCameraMoveListener(new GoogleMap.OnCameraMoveListener() {
             @Override
             public void onCameraMove() {
@@ -225,43 +260,45 @@
                 //  Log.d(TAG, ""+ mGoogleMap.getCameraPosition().zoom);
 
                 Double level = Double.valueOf(mGoogleMap.getCameraPosition().zoom);
-                if(level < 20.0){
+                if (level < 20.0) {
                     mapMarkers.showStairs(false);
-                }else{
+                } else {
                     mapMarkers.showStairs(true);
                 }
 
-                if(level < 18.58317 ){
+                if (level < 18.58317) {
                     mapMarkers.showBuildings(false);
-                }else{
+                } else {
                     mapMarkers.showBuildings(true);
                 }
 
-                if(level < 19.0){
+                if (level < 19.0) {
                     mapMarkers.showJunctions(false);
-                }else{
+                } else {
                     mapMarkers.showJunctions(true);
                 }
             }
         });
 
-        displayGraph(); // Display the edges
+        //displayGraph(); // Display the edges
+        mapPolylines.createGraph();
         displayIcons(); // Diplay the node icons
         goToLocation(sci_tech);
 
         boolean success = googleMap.setMapStyle(new MapStyleOptions(getResources().getString(R.string.style_icyBlue)));
-        if (!success) {Toast.makeText(this.getActivity(), "Style parsing failed.", Toast.LENGTH_LONG).show();}
+        if (!success) {
+            Toast.makeText(this.getActivity(), "Style parsing failed.", Toast.LENGTH_LONG).show();
+        }
 
     }
 
 
-
     @RequiresApi(api = Build.VERSION_CODES.M)
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         instance = this.getActivity();
-        dbHelper =  DB_Helper.getInstance(getActivity()); //Creating databases
+        dbHelper = DB_Helper.getInstance(getActivity()); //Creating databases
 
 
         try {// writes database to sd card for debugging purposes.
@@ -271,17 +308,14 @@
         }
 
 
-
-
-
         //Creates the fragment view.
         View view = inflater.inflate(R.layout.activity_find_me, container, false);
 
         // Sets the on click listener for the fragment elements.
-        Button find = (Button)view.findViewById(R.id.findBtn);
+        Button find = (Button) view.findViewById(R.id.findBtn);
         find.setOnClickListener(this);
 
-        ToggleButton location = (ToggleButton)view.findViewById(R.id.locationToggle);
+        ToggleButton location = (ToggleButton) view.findViewById(R.id.locationToggle);
         location.setOnClickListener(this);
 
 
@@ -293,7 +327,7 @@
     public void onClick(View v) {
 
         //Handles each on click method for a button.
-        switch (v.getId()){
+        switch (v.getId()) {
             case R.id.findBtn:
                 try {
                     Log.d(TAG, "onClick: find button ");
@@ -318,18 +352,18 @@
 
 
     @Override
-    public void onViewCreated(View view, Bundle savedInstanceState){
+    public void onViewCreated(View view, Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
         if (googleServicesCheck()) {
-            Toast.makeText(this.getActivity() , "Perfect!!", Toast.LENGTH_LONG).show();
+            Toast.makeText(this.getActivity(), "Perfect!!", Toast.LENGTH_LONG).show();
             initMap();
 
 
-        setTextViews();
+            setTextViews();
 
 
-       }
+        }
     }
 
 
@@ -344,16 +378,16 @@
          * Autocomplete Text Views
          */
 
-        ArrayList<String> rooms =  dbHelper.roomList();
+        ArrayList<String> rooms = dbHelper.roomList();
         rooms.addAll(dbHelper.buildingList());
         String[] locationSugg = rooms.toArray(new String[rooms.size()]);
-        ArrayAdapter<String> roomsArrayAdapter = new ArrayAdapter<>(getActivity(),android.R.layout.simple_list_item_1,locationSugg);
+        ArrayAdapter<String> roomsArrayAdapter = new ArrayAdapter<>(getActivity(), android.R.layout.simple_list_item_1, locationSugg);
 
 
         getSourceView = (AutoCompleteTextView) getView().findViewById(R.id.getSource);
         getSourceView.setThreshold(1);
         getSourceView.setAdapter(roomsArrayAdapter);
-         getSourceView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+        getSourceView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 /* hide keyboard */
@@ -362,7 +396,7 @@
 
                 String selected = (String) parent.getItemAtPosition(position);
                 setSource();
-                Toast.makeText(getActivity(),"Selected :" + selected, Toast.LENGTH_SHORT);
+                Toast.makeText(getActivity(), "Selected :" + selected, Toast.LENGTH_SHORT);
             }
         });
 
@@ -384,8 +418,8 @@
                 } catch (IOException e) {
                     e.printStackTrace();
                 }
-                Toast.makeText(getActivity(),"Selected :" + selected, Toast.LENGTH_SHORT);
+                Toast.makeText(getActivity(), "Selected :" + selected, Toast.LENGTH_SHORT);
-             }
+            }
         });
 
 
@@ -398,18 +432,14 @@
         sheetBehavior.setPeekHeight(200);
         sheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);
 
-        return ;
+        return;
     }
 
+    /**
+     * Checks to see if the User has play services available.
+     * @return
+     */
 
-
-
-
-
-
-    /*
-    ** Checks to see if the User has play services available.
-    **/
     public boolean googleServicesCheck() {
 
         GoogleApiAvailability api = GoogleApiAvailability.getInstance();
@@ -426,9 +456,10 @@
     }
 
 
-
-    /*
+    /***
-     *  Handles  the maps type switching
+     * Handles  the maps type switching
+     * @param item
+     * @return
      */
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
@@ -454,96 +485,80 @@
     }
 
 
-    /*
+    /**
-     *  Method used to jump to location.
+     * Method used to jump to location.
+     * @param ll
      */
     private void goToLocation(LatLng ll) {
-
-
-        //LatLng ll = new LatLng(lat, lng);
         CameraUpdate update = CameraUpdateFactory.newLatLngZoom(ll, 19);
         mGoogleMap.moveCamera(update);
     }
 
+    /**
+     * This methods should search through the vertex table
+     * and find a the starting point based of where the user
+     * selected in the text field.
+     * It utilizes the text filed @getSource to search through the database.
+     * @return
+     */
+    public boolean setSource() {
 
-    /*
+        String startText = getSourceView.getText().toString();
+        Cursor res = dbHelper.findLocation(startText);
+        return setVertex(res, 1);
+    }
+
+
+    /***
-     *   This is the Method used to look up classes on the Campus by utilizing the search bar provided.
+     * This is the Method used to look up classes on the Campus by utilizing the search bar provided.
-     *   It will get search through the database of class rooms and and create a destination object.
+     * It will get search through the database of class rooms and and create a destination object.
+     * @param view
+     * @throws IOException
      */
     public void geoLocate(View view) throws IOException {
 
         EditText et = (EditText) getView().findViewById(R.id.classSearch);
         String clss = et.getText().toString();
 
-        Cursor res = dbHelper. findLocation(clss);
+        Cursor res = dbHelper.findLocation(clss);
-        if (res.getCount() == 0) {
-            // show message "no results found in class database"
-            Toast.makeText(this.getActivity(), "Could not find " + clss, Toast.LENGTH_LONG).show();
-            return;
-        } else if (res.getCount() > 1) {
-            //TODO more than one possible classes found. Create method to let them choose
-            Toast.makeText(this.getActivity(), " Select a Class", Toast.LENGTH_LONG).show();
+        setVertex(res, 2);
 
-
-            return;
-        } else {
-            // create the room
-            //new Vertex(res.getString(0), res.getString(1), res.getDouble(2), res.getDouble(3),"Room");
-
-            //TODO allow destination to be building as well;
-            destination = path.getVertices().get(res.getString(0)); //takes the result and uses the id to find the location
-            mapMarkers.addMarker(destination, 2);
-
-            update = CameraUpdateFactory.newLatLngZoom(destination.getLL(), 18);
-            mGoogleMap.animateCamera(update);
-        }
+    }
 
 
-
-        Toast.makeText(this.getActivity(), destination.getName() + " is here", Toast.LENGTH_LONG).show();
-        goToLocation(destination.getLL());
-    }
-
-
-    /*
-        This methods should search through the vertex table
-        and find a the starting point based of where the user
-        selected in the text field.
-        It utilizes the text filed @getSource to search through the database.
-     */
-    public boolean setSource() {
-
-        String startText = getSourceView.getText().toString();
-
-        Cursor res = dbHelper.findLocation(startText);
-
-
-
-
-        if (res.getCount() == 0) {
+    public boolean setVertex(Cursor data, int type) {
+        //TODO change method to just take the id and type;
+        if (data.getCount() == 0) {
             // show message "no results found in places database"
-            Toast.makeText(this.getActivity(), "Could not find " + startText, Toast.LENGTH_LONG).show();
+            Toast.makeText(this.getActivity(), "Could not find ", Toast.LENGTH_LONG).show();
             return false;
-        } else if (res.getCount() > 1) {
-            // more than one possible starting point found found. Create method to let them choose
+        } else if (data.getCount() > 1) {
+            //TODO more than one possible starting point found found. Create method to let them choose
 
             Toast.makeText(this.getActivity(), "Please select one these Rooms to start from.", Toast.LENGTH_LONG).show();
             return false;
         } else {
+            switch (type) {
+                case 1:
-            // create the starting node
+                    // create the starting node
-                   start = path.getVertices().get(res.getString(0));
-                 
-
-
-            //start = new Vertex(res.getString(0), res.getString(1), res.getDouble(2), res.getDouble(3), "TEMP",0);
-
-            mapMarkers.addMarker(start, 1);
+                    start = path.getVertices().get(data.getString(0));
+                    mapMarkers.addMarker(start, type);
-            goToLocation(start.getLL());
+                    goToLocation(start.getLL());
-        }
+                    break;
+                case 2:
+                    //TODO allow destination to be building as well;
+                    destination = path.getVertices().get(data.getString(0)); //takes the result and uses the id to find the location
+                    mapMarkers.addMarker(destination, type);
 
-
+                    Toast.makeText(this.getActivity(), destination.getName() + " is here", Toast.LENGTH_LONG).show();
+                    goToLocation(destination.getLL());
+                    break;
+                default:
+                    break;
+            }
-        return true;
-    }
+            return true;
+        }
+    }
 
 
     /***
@@ -574,7 +589,6 @@
                 location_service_enabled = true;
 
 
-
             } else {
                 Toast.makeText(this.getActivity(), "Please turn Locations on", Toast.LENGTH_LONG).show();
                 ((ToggleButton) view).setChecked(false);
@@ -583,10 +597,7 @@
 
 
         } else {
-            if (mGoogleApiClient != null)
-                mGoogleApiClient.disconnect();
-
-
+            if (mGoogleApiClient != null){ mGoogleApiClient.disconnect();}
             if (ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                 //   TODO: Consider calling
                 //    ActivityCompat#requestPermissions
@@ -639,99 +650,53 @@
     }
 
 
-    /*
+    /**
-     * Configures google maps to enable and use the user location.
+     *  Configures google maps to enable and use the user location.
      */
     public void useMyLocation() {
 
         if (ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
-            // TODO: Consider calling
-            //    ActivityCompat#requestPermissions
-            // here to request the missing permissions, and then overriding
-            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
-            //                                          int[] grantResults)
-            // to handle the case where the user grants the permission. See the documentation
-            // for ActivityCompat#requestPermissions for more details.
-            return;
+          return;
         }
 
-        mGoogleMap.setMyLocationEnabled(true);          //Enables google tracking.
+        mGoogleMap.setMyLocationEnabled(true); //Enables google tracking.
 
+//        if (mGoogleApiClient == null) {
+//            mGoogleApiClient = new GoogleApiClient.Builder(this.getActivity())
+//                    .addApi(LocationServices.API)
+//                    .addConnectionCallbacks(this)
+//                    .addOnConnectionFailedListener(this)
+//                    .addApi(Places.GEO_DATA_API)
+//                    .addApi(Places.PLACE_DETECTION_API)
+//                    .enableAutoManage((FragmentActivity) this.getActivity(), this)
+//                    .build();
+//        }
 
-        mUiSettings.setMyLocationButtonEnabled(false);  //Disable the google compass button.
-        if (mGoogleApiClient == null) {
-            mGoogleApiClient = new GoogleApiClient.Builder(this.getActivity())
-                    .addApi(LocationServices.API)
-                    .addConnectionCallbacks(this)
-                    .addOnConnectionFailedListener(this)
-                    .addApi(Places.GEO_DATA_API)
-                    .addApi(Places.PLACE_DETECTION_API)
-                    .enableAutoManage((FragmentActivity)this.getActivity(), this)
-                    .build();
-        }
+        if(!mGoogleApiClient.isConnected()){
-        mGoogleApiClient.connect();
-    }
+            mGoogleApiClient.connect();
+        }
+    }
 
-
-
-    /*
-     *  Method that adds a marker to the map.
-     */
-    public void addMarker(Double lat, Double lng, String title, String snip, Integer type) {
-
-        LatLng ll = new LatLng(lat, lng);
-
-
-        if (type == 1) {
-            if (startMarker != null)
-                startMarker.remove();
-
-            MarkerOptions option = new MarkerOptions()
-                    .title(title)
-                    .snippet(snip)
-                    //.icon(BitmapDescriptorFactory.fromResource(R.))
-                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED))
-                    .position(ll);
-
-            startMarker = mGoogleMap.addMarker(option);
-
-        } else if (type == 2) {
-            if (destMarker != null)
-                destMarker.remove();
-
-            MarkerOptions option = new MarkerOptions()
-                    .title(title)
-                    .snippet(snip)
-                    //.icon(BitmapDescriptorFactory.fromResource(R.))
-                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))
-                    .position(ll);
-
-            destMarker = mGoogleMap.addMarker(option);
-
-
-        } else {
-
-
+    public static Location getLocation(Context c){
+         if(!isGPSEnabled(c)){
+            return null;
+        }else if(!mGoogleApiClient.isConnected()){
+            mGoogleApiClient.connect();
         }
 
-
+        return my_location;
     }
 
 
-
-
     /***
      * This Method Performs the Dijkstras algorithm on the graph for the current source and destination selected.
-     *
      */
     public void getPath() {
 
         location_service_enabled = ((ToggleButton) getView().findViewById(R.id.locationToggle)).isChecked(); //Finds out if user want to use their their location.
-        Boolean isSourceSet;
 
-
         //handles the start location configuration
-        if (location_service_enabled) {
+        if (location_service_enabled && !isSourceSet) {
             if (ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this.getActivity(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                 // TODO: Consider calling
                 //    ActivityCompat#requestPermissions
@@ -742,16 +707,13 @@
                 // for ActivityCompat#requestPermissions for more details.
                 return;
             }
-            //MapMarker.startMarker
+            //TODO Check location accuracy before using the point;
             start = Distance.find_closest_marker(LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient));
             isSourceSet = true;
-
-        }else{
+         }else{
             isSourceSet = setSource();
-        }
+         }
 
-
-
          if (!isSourceSet) {
             // ask them to select a starting point
             Toast.makeText(this.getActivity(), "NO Source", Toast.LENGTH_LONG).show();
@@ -825,11 +787,10 @@
 
 
             v1 = vertexHashMap.get(edge.getSource().getId());
-
-
             v2 = vertexHashMap.get(edge.getDestination().getId());
 
 
+
             //TODO make polyline clickable
             PolylineOptions options = new PolylineOptions()
                     .color(0x33606060)
@@ -841,11 +802,6 @@
             lane =  mGoogleMap.addPolyline(options);
             lane.setClickable(true);
 
-
-
-
-
-
             graphLines.add(lane);
 
 
@@ -886,9 +842,17 @@
             return;
         }
 
-        Location lastlocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
+        Location location = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
+        if(location == null) {
+            LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest,this);
+        }else if(location.hasAltitude()){
+            double altitude = location.getAltitude();
+            Log.d(TAG, "onConnected: Altitude; "+ altitude);
+        }else{
+            Toast.makeText(getActivity(), "if your inside a building please select floor", Toast.LENGTH_SHORT);
+        }
 
-        Log.d("Last Location ", " "+ lastlocation);
+        Log.d(TAG, "onConnected: "+ location);
 
         LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); //this methods uses the location services to display users location
 
@@ -919,24 +883,15 @@
         if(location == null){
             Toast.makeText(this.getActivity(), "Cant get current Location", Toast.LENGTH_LONG).show();
         }else {
-
-
-
             LatLng ll = new LatLng(location.getLatitude(),location.getLongitude());
+            if(location_service_enabled){
-            goToLocation(ll);
+                goToLocation(ll);
-
+            }
             //TODO call tracker method
-
-            //Toast.makeText(this, "Located", Toast.LENGTH_LONG).show();
-
-            //mapTracker.locationTracking(location);
-
             my_location = location;
+            Log.d(TAG,"onLocationChanged: Location Accuracy: "+ location.getAccuracy());
+            Log.d( TAG, "onLocationChanged: "+String.valueOf(location));
 
-
-            Log.d("Location Accuracy", ""+ location.getAccuracy());
-            Log.d("onLocationChanged: ", String.valueOf(location));
-
         }
     }
 
@@ -966,10 +921,6 @@
         ImageButton image_button = (ImageButton) getActivity().findViewById(R.id.bottom_sheet_add_image);
         TextView place_title = (TextView) getActivity().findViewById(R.id.bottom_sheet_title);
         TextView place_info1 = (TextView) getActivity().findViewById(R.id.place_info1);
-
-//        TextView place_info2 = (TextView) getActivity().findViewById(R.id.place_info2);
-//        ImageView explore_icon = (ImageView) getActivity().findViewById(R.id.show_info);
-
         View moreinfo = getActivity().findViewById(R.id.more_info_layout);
 
 
@@ -1114,7 +1065,6 @@
                 if( SphericalUtil.computeDistanceBetween(midPoint,POI.get(n).getLL()) < 15.0){
                     //closePoints.add(POI.remove(n));
                     Log.d(TAG, "getPOI: distance midPoint-POI.get(n).getLL() " +  SphericalUtil.computeDistanceBetween(midPoint,POI.get(n).getLL()));
-
                     mapMarkers.addMarker( POI.remove(n), 3);
                 }
             }
@@ -1155,43 +1105,6 @@
         return nodes;
     }
 
-    @Override
-    public void onPolylineClick(Polyline polyline) {
-
-        int i = 0;
-
-        Log.d(TAG, "onPolylineClick:  CLICKED LINE");
-        String id =  polyline.getId();
-        Toast.makeText(getContext(),"LINE  "+ id, Toast.LENGTH_SHORT);
-
-    }
-
-
-//    AddPlaceRequest place = new AddPlaceRequest("C5",
-//                                            new LatLng(18.004294, -76.750225),
-//                                            "The University Of The West Indies - Mona",
-//                                            Collections.singletonList(Place.TYPE_POINT_OF_INTEREST),
-//                                            "(876) 927-1660" );
-//
-//    Places.GeoDataApi.addPlace(mGoogleApiClient, place).setResultCallback(new ResultCallback<PlaceBuffer>(){
-//
-//        @Override
-//        public void onResult(PlaceBuffer places)
-//        {
-//
-//            if (!places.getStatus().isSuccess()) {
-//
-//                Log.e(TAG, "Place query did not complete. Error: " + places.getStatus().toString());
-//                places.release();
-//                return;
-//            }
-//
-//            final Place place = places.get(0);
-//            newPlaceID = place.getId();
-//            Log.i(TAG, "Place add result: " + place.getName());
-//            places.release();
-//        }
-//    });
 
 //}
 
Index: app/src/main/java/com/android/comp3901/findmeuwi/services/MapMarker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/MapMarker.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/MapMarker.java	(revision )
@@ -42,10 +42,6 @@
 
 
 
-
-
-
-
     private MapMarker(GoogleMap map){
         mGoogleMap = map;
         this.stairs_markers = new LinkedList<>();
@@ -80,8 +76,7 @@
                 option= new MarkerOptions()
                         .title(title)
                         .snippet(snip)
-                        //.icon(BitmapDescriptorFactory.fromResource(R.))
-                        .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED))
+                        .icon(BitmapDescriptorFactory.fromResource(R.mipmap.start_marker))
                         .position(ll);
                 startMarker = mGoogleMap.addMarker(option);
                 startMarker.setTag(vertex);
@@ -92,8 +87,7 @@
                 option = new MarkerOptions()
                         .title(title)
                         .snippet(snip)
-                        //.icon(BitmapDescriptorFactory.fromResource(R.))
-                        .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))
+                        .icon(BitmapDescriptorFactory.fromResource(R.mipmap.dest_marker_blue))
                         .position(ll);
                 destMarker = mGoogleMap.addMarker(option);
                 destMarker.setTag(vertex);
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/values/colors.xml	(revision )
@@ -4,6 +4,11 @@
     <color name="colorPrimaryDark">#303F9F</color>
     <color name="colorAccent">#FF4081</color>
 
+    <color name="groundFloorColor">#CC000000</color>
+    <color name="secondFloorColor">#cc303f9f</color>
+    <color name="thirdFloorColor">#b9fcf800</color>
+    <color name="undergroundFloorColor">#eb5400fc</color>
+
     <color name="White">#FFFFFF</color>
     <color name="Ivory">#FFFFF0</color>
     <color name="LightYellow">#FFFFE0</color>
Index: app/src/main/java/com/android/comp3901/findmeuwi/services/DB_Helper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/DB_Helper.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/DB_Helper.java	(revision )
@@ -2555,7 +2555,7 @@
 //
 //        db.insert(VERTICES_TABLE,null,vertices);
 //        vertices.clear();
-//changes made
+//
 
 
       vertices.clear();
@@ -3429,7 +3429,7 @@
      */
     public Cursor findLocation(double lat ,double lng, String id) {
 
-        Log.d(TAG, "findLocation: " + id+" " + lat +" "+ lng);
+       // Log.d(TAG, "findLocation: " + id+" " + lat +" "+ lng);
         SQLiteDatabase db = this.getWritableDatabase();
         Cursor res = db.rawQuery( "SELECT * FROM " + ROOM_TABLE + " WHERE "+ RT_LAT + " == "+ lat +" " +
                 " AND "+ RT_LONG +" == "+ lng +" AND "+RT_ID+" LIKE '"+id+"';", null);
Index: app/src/main/java/com/android/comp3901/findmeuwi/services/Tracker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/Tracker.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/Tracker.java	(revision )
@@ -77,7 +77,6 @@
 
     public void startTracker() throws InterruptedException {
 
-       // while(true){
             sleep(2000);
 
             Log.d(TAG, "startTracker: Thread Running");
@@ -111,9 +110,7 @@
 //                    locationTracking();
 //                }
 //            }
-
-        //}
-    }
+  }
 
 
 
@@ -280,10 +277,7 @@
                          ((Place) FindMe.destination).updateDB();
                          Log.d("NEW Familiarity  ", ""+((Place) FindMe.destination).getFamiliarity());
                     }
-
-
-
-                 //TODO toast message
+                //TODO toast message
                  onArrival(FindMe.destination);
              }
          });
@@ -292,17 +286,12 @@
          noBtn.setOnClickListener(new View.OnClickListener() {
              @Override
              public void onClick(View v) {
-                 Toast.makeText(instance.getApplicationContext(),"Not Arrived",Toast.LENGTH_SHORT).show();
+                Toast.makeText(instance.getApplicationContext(),"Not Arrived",Toast.LENGTH_SHORT).show();
-
-                 dialog.dismiss();
+                dialog.dismiss();
-
-                 //TODO: restart the timer
+                //TODO: restart the timer
              }
          });
-
-
-
-        }
+    }
 
 
 
Index: app/src/main/java/com/android/comp3901/findmeuwi/activities/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/activities/MainActivity.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/activities/MainActivity.java	(revision )
@@ -4,6 +4,7 @@
 import android.app.SearchManager;
 import android.content.ComponentName;
 import android.content.Context;
+import android.content.Intent;
 import android.database.Cursor;
 import android.os.Bundle;
 import android.support.design.widget.FloatingActionButton;
@@ -145,7 +146,7 @@
 
 
 
-        //Needs fixing
+        // TODO Needs fixing
 
 
         if(findMeFrag != null){
@@ -187,6 +188,11 @@
             intent.putExtra(MediaStore.EXTRA_OUTPUT,
                     MediaStore.Images.Media.EXTERNAL_CONTENT_URI.getPath());
             startActivityForResult(intent, 1);*/
+
+            Intent i = new Intent(MainActivity.this, add_landmarks.class);
+            startActivity(i);
+
+
         } else if (id == R.id.nav_gallery) {
             /*fm.beginTransaction().replace(R.id.content_frame, new gmapsfrag()).commit();*/
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -46,12 +46,18 @@
             </intent-filter>
         </activity>
 
+        <activity android:name=".activities.add_landmarks"
+            android:screenOrientation="portrait">
+
+
+        </activity>
+
         <activity android:name=".activities.MainActivity"
             android:launchMode="singleTop">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
 
             <intent-filter>
\ No newline at end of file
Index: app/src/main/res/menu/activity_main_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/activity_main_drawer.xml	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/res/menu/activity_main_drawer.xml	(revision )
@@ -5,32 +5,32 @@
         <item
             android:id="@+id/nav_camera"
             android:icon="@drawable/ic_menu_camera"
-            android:title="Import" />
+            android:title="Add LandMark" />
         <item
             android:id="@+id/nav_gallery"
             android:icon="@drawable/ic_menu_gallery"
-            android:title="Map" />
+            android:title="Change Theme" />
         <item
             android:id="@+id/nav_slideshow"
             android:icon="@drawable/ic_menu_slideshow"
-            android:title="Slideshow" />
+            android:title="View Rooms" />
         <item
             android:id="@+id/nav_manage"
             android:icon="@drawable/ic_menu_manage"
             android:title="Tools" />
     </group>
 
-    <item android:title="Communicate">
-        <menu>
-            <item
-                android:id="@+id/nav_share"
-                android:icon="@drawable/ic_menu_share"
-                android:title="Share" />
-            <item
-                android:id="@+id/nav_send"
-                android:icon="@drawable/ic_menu_send"
-                android:title="Send" />
-        </menu>
-    </item>
+    <!--<item android:title="Communicate">-->
+        <!--<menu>-->
+            <!--<item-->
+                <!--android:id="@+id/nav_share"-->
+                <!--android:icon="@drawable/ic_menu_share"-->
+                <!--android:title="Share" />-->
+            <!--<item-->
+                <!--android:id="@+id/nav_send"-->
+                <!--android:icon="@drawable/ic_menu_send"-->
+                <!--android:title="Send" />-->
+        <!--</menu>-->
+    <!--</item>-->
 
 </menu>
Index: app/src/main/java/com/android/comp3901/findmeuwi/services/Edge.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/Edge.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/Edge.java	(revision )
@@ -11,12 +11,14 @@
     private final Vertex source;
     private final Vertex destination;
     private final int weight;
+    private final int level;
 
-    public Edge(String id, Vertex source, Vertex destination, int weight) {
+    public Edge(String id, Vertex source, Vertex destination, int weight, int level) {
         this.id = id;
         this.source = source;
         this.destination = destination;
         this.weight = weight;
+        this.level = level;
     }
 
     public String getId() {
@@ -38,5 +40,7 @@
         return source + " " + destination;
     }
 
-
+    public int getLevel() {
+        return level;
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/android/comp3901/findmeuwi/services/Learner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/comp3901/findmeuwi/services/Learner.java	(revision 795927f0ae1d67ec683a642aabb4faa9a6de4e52)
+++ app/src/main/java/com/android/comp3901/findmeuwi/services/Learner.java	(revision )
@@ -76,7 +76,4 @@
         place.setKnown(1);
     }
 
-
-
-
 }
